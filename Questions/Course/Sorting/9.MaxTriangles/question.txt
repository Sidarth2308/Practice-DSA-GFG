Given an unsorted array arr[] of n positive integers. Find the number of triangles that can be formed with three different array elements as lengths of three sides of triangles. 
I : {3, 5, 4}
O : 1
A triangle is possible with all the elements 5, 3 and 4.

I : {6, 4, 9, 7, 8}
O : 10
There are 10 triangles possible  with the given elements like (6,4,9), (6,7,8),...

Solution : 
For a 3 numbers, A,B,C to be possible sides of a triangle, there must be 3 conditions that should be true.
A + B > C
A + C > B
B + C > A
Here we first sort the array.
Then we fix one of the elements from the end. Then we use the two pointer approach.
Left is set to 0 and right is set to current element - 1 (i-1). If the sum of left element and the right element is greater than our current element, then we know we sum of all elements from left to right will be greater than our current element(because sorted). Hence count of triangles += right-left.
If it is < than the current element, then we simply increment the left counter. This is done because decreasing high would lead to a lesser sum.